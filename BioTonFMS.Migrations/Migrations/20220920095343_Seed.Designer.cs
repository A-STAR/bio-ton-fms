// <auto-generated />
using BioTonFMS.Infrastructure.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BioTonFMSApp.Migrations
{
    [DbContext(typeof(BioTonDBContext))]
    [Migration("20220920095343_Seed")]
    partial class Seed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BioTonFMS.Domain.Device", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("name");

                    b.Property<int>("TrackerId")
                        .HasColumnType("integer")
                        .HasColumnName("tracker_id");

                    b.HasKey("Id")
                        .HasName("pk_devices");

                    b.HasIndex("TrackerId")
                        .HasDatabaseName("ix_devices_tracker_id");

                    b.ToTable("devices", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "D1",
                            TrackerId = 2
                        },
                        new
                        {
                            Id = 2,
                            Name = "D2",
                            TrackerId = 2
                        },
                        new
                        {
                            Id = 3,
                            Name = "D3",
                            TrackerId = 2
                        });
                });

            modelBuilder.Entity("BioTonFMS.Domain.Tracker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Imei")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("imei");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_trackers");

                    b.ToTable("trackers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Imei = "12345678",
                            Name = "tracker 1"
                        },
                        new
                        {
                            Id = 2,
                            Imei = "22345679",
                            Name = "tracker 2"
                        });
                });

            modelBuilder.Entity("BioTonFMS.Domain.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("name");

                    b.Property<int>("TrackerId")
                        .HasColumnType("integer")
                        .HasColumnName("tracker_id");

                    b.HasKey("Id")
                        .HasName("pk_vehicles");

                    b.HasIndex("TrackerId")
                        .HasDatabaseName("ix_vehicles_tracker_id");

                    b.ToTable("vehicles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "vehicle 1",
                            TrackerId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "vehicle 2",
                            TrackerId = 2
                        });
                });

            modelBuilder.Entity("BioTonFMS.Domain.Device", b =>
                {
                    b.HasOne("BioTonFMS.Domain.Tracker", "Tracker")
                        .WithMany("Devices")
                        .HasForeignKey("TrackerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_devices_trackers_tracker_id");

                    b.Navigation("Tracker");
                });

            modelBuilder.Entity("BioTonFMS.Domain.Vehicle", b =>
                {
                    b.HasOne("BioTonFMS.Domain.Tracker", "Tracker")
                        .WithMany()
                        .HasForeignKey("TrackerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_vehicles_trackers_tracker_id");

                    b.Navigation("Tracker");
                });

            modelBuilder.Entity("BioTonFMS.Domain.Tracker", b =>
                {
                    b.Navigation("Devices");
                });
#pragma warning restore 612, 618
        }
    }
}
