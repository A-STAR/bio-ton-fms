{
  "root": true,
  "ignorePatterns": [
    "projects/**/*"
  ],
  "overrides": [
    {
      "files": [
        "*.ts",
        "*.html"
      ],
      "rules": {
        "eol-last": "error",
        "max-len": [
          "warn",
          {
            "code": 140
          }
        ],
        "no-multiple-empty-lines": [
          "warn",
          {
            "max": 1,
            "maxBOF": 0,
            "maxEOF": 1
          }
        ],
        "no-trailing-spaces": "warn"
      }
    },
    {
      "files": [
        "*.ts"
      ],
      "parserOptions": {
        "project": [
          "tsconfig.json"
        ],
        "createDefaultProgram": true
      },
      "extends": [
        "eslint:recommended",
        "plugin:@angular-eslint/recommended",
        "plugin:@angular-eslint/template/process-inline-templates",
        "plugin:@typescript-eslint/recommended",
        "plugin:jsdoc/recommended-typescript"
      ],
      "rules": {
        "@angular-eslint/directive-selector": [
          "error",
          {
            "type": "attribute",
            "prefix": "bio",
            "style": "camelCase"
          }
        ],
        "@angular-eslint/component-selector": [
          "error",
          {
            "type": "element",
            "prefix": "bio",
            "style": "kebab-case"
          }
        ],
        "@typescript-eslint/member-delimiter-style": [
          "error",
          {
            "multiline": {
              "delimiter": "semi"
            },
            "singleline": {
              "delimiter": "semi",
              "requireLast": true
            }
          }
        ],
        "@typescript-eslint/member-ordering": [
          "warn",
          {
            "default": [
              "signature",
              "call-signature",
              "public-decorated-get",
              "public-decorated-set",
              "public-decorated-field",
              "protected-decorated-get",
              "protected-decorated-set",
              "protected-decorated-field",
              "private-decorated-get",
              "private-decorated-set",
              "private-decorated-field",
              "public-static-get",
              "public-instance-get",
              "public-abstract-get",
              "public-static-set",
              "public-instance-set",
              "public-abstract-set",
              "protected-static-get",
              "protected-instance-get",
              "protected-abstract-get",
              "protected-static-set",
              "protected-instance-set",
              "protected-abstract-set",
              "#private-static-get",
              "#private-static-set",
              "private-static-get",
              "private-static-set",
              "#private-instance-get",
              "#private-instance-set",
              "private-instance-get",
              "private-instance-set",
              "public-static-field",
              "public-instance-field",
              "public-abstract-field",
              "public-static-method",
              "public-instance-method",
              "public-abstract-method",
              "protected-static-field",
              "protected-instance-field",
              "protected-abstract-field",
              "protected-static-method",
              "protected-instance-method",
              "protected-abstract-method",
              "#private-static-field",
              "private-static-field",
              "#private-instance-field",
              "private-instance-field",
              "#private-static-method",
              "private-static-method",
              "#private-instance-method",
              "private-instance-method",
              "constructor"
            ]
          }
        ],
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/no-non-null-assertion": "off",
        "@typescript-eslint/no-unused-vars": [
          "warn",
          {
            "argsIgnorePattern": "_",
            "varsIgnorePattern": "id|Id$"
          }
        ],
        "@typescript-eslint/padding-line-between-statements": [
          "warn",
          {
            "blankLine": "always",
            "prev": "*",
            "next": [
              "break",
              "continue",
              "interface",
              "return",
              "type"
            ]
          },
          {
            "blankLine": "always",
            "prev": [
              "block",
              "block-like",
              "const",
              "let",
              "multiline-expression"
            ],
            "next": "*"
          },
          {
            "blankLine": "any",
            "prev": [
              "const",
              "let"
            ],
            "next": [
              "const",
              "let"
            ]
          }
        ],
        "@typescript-eslint/semi": "error",
        "arrow-body-style": [
          "warn",
          "as-needed"
        ],
        "camelcase": "warn",
        "curly": "warn",
        "default-case-last": "warn",
        "default-param-last": "warn",
        "eqeqeq": [
          "error",
          "smart"
        ],
        "func-call-spacing": "error",
        "func-names": [
          "warn",
          "as-needed"
        ],
        "grouped-accessor-pairs": [
          "warn",
          "getBeforeSet"
        ],
        "jsdoc/check-line-alignment": "warn",
        "jsdoc/check-param-names": [
          "error",
          {
            "checkDestructured": false
          }
        ],
        "jsdoc/no-bad-blocks": "warn",
        "jsdoc/require-description": "warn",
        "jsdoc/require-description-complete-sentence": [
          "warn",
          {
            "newlineBeforeCapsAssumesBadSentenceEnd": true
          }
        ],
        "jsdoc/require-param": [
          "error",
          {
            "checkDestructured": false
          }
        ],
        "jsdoc/sort-tags": [
          "warn",
          {
            "tagSequence": [
              {
                "tags": [
                  "param"
                ]
              },
              {
                "tags": [
                  "returns"
                ]
              }
            ]
          }
        ],
        "jsdoc/tag-lines": [
          "warn",
          "any",
          {
            "startLines": 1
          }
        ],
        "indent": [
          "warn",
          2,
          {
            "SwitchCase": 1
          }
        ],
        "keyword-spacing": "warn",
        "lines-between-class-members": [
          "warn",
          "always",
          {
            "exceptAfterSingleLine": true
          }
        ],
        "logical-assignment-operators": [
          "warn",
          "always",
          {
            "enforceForIfStatements": true
          }
        ],
        "newline-per-chained-call": [
          "warn",
          {
            "ignoreChainWithDepth": 1
          }
        ],
        "no-alert": "error",
        "no-array-constructor": "error",
        "no-console": "error",
        "no-constant-binary-expression": "warn",
        "no-debugger": "error",
        "no-delete-var": "error",
        "no-duplicate-imports": [
          "warn",
          {
            "includeExports": true
          }
        ],
        "no-else-return": "warn",
        "no-empty": [
          "warn",
          {
            "allowEmptyCatch": true
          }
        ],
        "no-empty-function": [
          "warn",
          {
            "allow": [
              "constructors"
            ]
          }
        ],
        "no-empty-static-block": "warn",
        "no-eval": "warn",
        "no-extend-native": "warn",
        "no-extra-boolean-cast": "warn",
        "no-floating-decimal": "warn",
        "no-implicit-coercion": "warn",
        "no-inline-comments": [
          "warn",
          {
            "ignorePattern": "istanbul ignore\\s.+"
          }
        ],
        "no-irregular-whitespace": [
          "warn",
          {
            "skipTemplates": true
          }
        ],
        "no-lonely-if": "warn",
        "no-restricted-imports": [
          "error",
          {
            "patterns": [
              {
                "group": [
                  "src/*"
                ],
                "message": "Please use the relative import instead."
              }
            ]
          }
        ],
        "no-self-compare": "warn",
        "no-template-curly-in-string": "warn",
        "no-undef-init": "error",
        "no-unmodified-loop-condition": "error",
        "no-unreachable-loop": "error",
        "no-unused-private-class-members": "warn",
        "no-void": "error",
        "no-whitespace-before-property": "error",
        "object-property-newline": [
          "warn",
          {
            "allowAllPropertiesOnSameLine": true
          }
        ],
        "padded-blocks": [
          "warn",
          "never"
        ],
        "prefer-const": [
          "warn",
          {
            "destructuring": "all",
            "ignoreReadBeforeAssign": true
          }
        ],
        "quotes": [
          "error",
          "single",
          {
            "allowTemplateLiterals": true
          }
        ],
        "space-before-blocks": "warn",
        "space-before-function-paren": [
          "error",
          {
            "anonymous": "never",
            "named": "never"
          }
        ],
        "spaced-comment": "warn"
      }
    },
    {
      "files": [
        "*.html"
      ],
      "extends": [
        "plugin:@angular-eslint/template/recommended"
      ],
      "rules": {
        "@angular-eslint/template/accessibility-alt-text": "error",
        "@angular-eslint/template/accessibility-label-has-associated-control": "error",
        "@angular-eslint/template/attributes-order": [
          "warn",
          {
            "order": [
              "TEMPLATE_REFERENCE",
              "ATTRIBUTE_BINDING",
              "INPUT_BINDING",
              "TWO_WAY_BINDING",
              "STRUCTURAL_DIRECTIVE",
              "OUTPUT_BINDING"
            ]
          }
        ],
        "@angular-eslint/template/no-any": "warn",
        "@angular-eslint/template/no-duplicate-attributes": "error",
        "@angular-eslint/template/no-inline-styles": [
          "error",
          {
            "allowNgStyle": true,
            "allowBindToStyle": true
          }
        ]
      }
    }
  ]
}
