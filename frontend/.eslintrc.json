{
  "root": true,
  "ignorePatterns": [
    "projects/**/*"
  ],
  "overrides": [
    {
      "files": [
        "*.ts",
        "*.html"
      ],
      "rules": {
        "eol-last": "error",
        "max-len": [
          "error",
          {
            "code": 140
          }
        ],
        "no-multiple-empty-lines": [
          "error",
          {
            "max": 1,
            "maxBOF": 0,
            "maxEOF": 1
          }
        ],
        "no-trailing-spaces": "error"
      }
    },
    {
      "files": [
        "*.ts"
      ],
      "parserOptions": {
        "project": [
          "tsconfig.json"
        ],
        "createDefaultProgram": true
      },
      "extends": [
        "plugin:@angular-eslint/recommended",
        "plugin:@angular-eslint/template/process-inline-templates",
        "plugin:jsdoc/recommended-typescript-error"
      ],
      "rules": {
        "@angular-eslint/directive-selector": [
          "error",
          {
            "type": "attribute",
            "prefix": "bio",
            "style": "camelCase"
          }
        ],
        "@angular-eslint/component-selector": [
          "error",
          {
            "type": "element",
            "prefix": "bio",
            "style": "kebab-case"
          }
        ],
        "@typescript-eslint/member-delimiter-style": [
          "error",
          {
            "multiline": {
              "delimiter": "semi"
            },
            "singleline": {
              "delimiter": "semi",
              "requireLast": true
            }
          }
        ],
        "@typescript-eslint/member-ordering": [
          "error",
          {
            "default": [
              "signature",
              "call-signature",
              "public-decorated-get",
              "public-decorated-set",
              "public-decorated-field",
              "protected-decorated-get",
              "protected-decorated-set",
              "protected-decorated-field",
              "private-decorated-get",
              "private-decorated-set",
              "private-decorated-field",
              "public-static-get",
              "public-instance-get",
              "public-abstract-get",
              "public-static-set",
              "public-instance-set",
              "public-abstract-set",
              "protected-static-get",
              "protected-instance-get",
              "protected-abstract-get",
              "protected-static-set",
              "protected-instance-set",
              "protected-abstract-set",
              "#private-static-get",
              "#private-static-set",
              "private-static-get",
              "private-static-set",
              "#private-instance-get",
              "#private-instance-set",
              "private-instance-get",
              "private-instance-set",
              "public-static-field",
              "public-instance-field",
              "public-abstract-field",
              "public-static-method",
              "public-instance-method",
              "public-abstract-method",
              "protected-static-field",
              "protected-instance-field",
              "protected-abstract-field",
              "protected-static-method",
              "protected-instance-method",
              "protected-abstract-method",
              "#private-static-field",
              "private-static-field",
              "#private-instance-field",
              "private-instance-field",
              "#private-static-method",
              "private-static-method",
              "#private-instance-method",
              "private-instance-method",
              "constructor"
            ]
          }
        ],
        "@typescript-eslint/padding-line-between-statements": [
          "error",
          {
            "blankLine": "always",
            "prev": "*",
            "next": [
              "break",
              "continue",
              "interface",
              "return",
              "type"
            ]
          },
          {
            "blankLine": "always",
            "prev": [
              "block",
              "block-like",
              "const",
              "let",
              "multiline-expression"
            ],
            "next": "*"
          },
          {
            "blankLine": "any",
            "prev": [
              "const",
              "let"
            ],
            "next": [
              "const",
              "let"
            ]
          }
        ],
        "@typescript-eslint/semi": "error",
        "func-call-spacing": "error",
        "jsdoc/check-line-alignment": "error",
        "jsdoc/check-param-names": [
          "error",
          {
            "checkDestructured": false
          }
        ],
        "jsdoc/no-bad-blocks": "error",
        "jsdoc/require-description": "error",
        "jsdoc/require-description-complete-sentence": [
          "error",
          {
            "newlineBeforeCapsAssumesBadSentenceEnd": true
          }
        ],
        "jsdoc/require-param": [
          "error",
          {
            "checkDestructured": false
          }
        ],
        "jsdoc/sort-tags": [
          "error",
          {
            "tagSequence": [
              {
                "tags": [
                  "param"
                ]
              },
              {
                "tags": [
                  "returns"
                ]
              }
            ]
          }
        ],
        "jsdoc/tag-lines": [
          "error",
          "any",
          {
            "startLines": 1
          }
        ],
        "indent": [
          "error",
          2,
          {
            "SwitchCase": 1
          }
        ],
        "keyword-spacing": "error",
        "lines-between-class-members": [
          "error",
          "always",
          {
            "exceptAfterSingleLine": true
          }
        ],
        "newline-per-chained-call": [
          "error",
          {
            "ignoreChainWithDepth": 1
          }
        ],
        "no-whitespace-before-property": "error",
        "object-property-newline": [
          "error",
          {
            "allowAllPropertiesOnSameLine": true
          }
        ],
        "padded-blocks": [
          "error",
          "never"
        ],
        "prefer-const": [
          "error",
          {
            "destructuring": "all",
            "ignoreReadBeforeAssign": true
          }
        ],
        "quotes": [
          "error",
          "single",
          {
            "allowTemplateLiterals": true
          }
        ],
        "space-before-blocks": "error",
        "space-before-function-paren": [
          "error",
          {
            "anonymous": "never",
            "named": "never"
          }
        ],
        "spaced-comment": "error"
      }
    },
    {
      "files": [
        "*.html"
      ],
      "extends": [
        "plugin:@angular-eslint/template/recommended"
      ]
    }
  ]
}
